{"majorversion": 3, "classmap": {"JSONPRequest": {"name": "JSONPRequest", "constructors": [{"params": [{"type": "String} the url of the JSONP service, including a {placeholder", "name": "url", "description": " \nfor the callback function"}, {"type": "Object|Function", "name": "callback", "description": "  the callback configuration or success\nhandler"}], "description": "<p>Provides a JSONPRequest class for repeated JSONP calls, and a convenience\nmethod Y.ls_n.jsonp(url, callback) to instantiate and send a JSONP request.</p>\n<p>The url of the JSONP service should include the substring \"{callback}\"\nin place of the name of the callback function to be executed.  E.g\n<code>Y.ls_n.jsonp(\"http://foo.com/bar?cb={callback}\",myCallback);</code></p>\n<p>The second parameter can be a callback function that accepts the JSON\npayload as its argument, or a configuration object supporting the keys:</p>\n<ul>\n<li>success - function handler for successful transmission</li>\n<li>failure - function handler for failed transmission</li>\n<li>pattern - RegExp instance used to insert the generated callback name\ninto the JSONP url (default /\\{callback\\}/i)</li>\n</ul>"}], "namespace": "", "module": "ls_n.jsonp", "methods": {"_init": {"protected": "", "params": [{"type": "Object|Function", "name": "cfg", "description": "  The success callback or the config\nobject containing success and failure functions and\nthe url regex."}], "description": "Set up the success and failure handlers and the regex pattern used\nto insert the temporary callback name in the url.", "guessedname": "_init", "guessedtype": "function"}, "Y.ls_n.jsonp": {"return": {"type": "JSONPRequest", "description": ""}, "static": "", "params": [{"type": "String} the url of the JSONP service with the {callback", "name": "url", "description": " \nplaceholder where the callback function name typically goes."}, {"type": "Function|Object", "name": "c", "description": "  Callback function accepting the JSON payload\nas its argument, or a configuration object (see above)."}], "guessedname": "jsonp", "guessedtype": "function"}, "send": {"chainable": "", "description": "Issues the JSONP request.", "guessedname": "send", "guessedtype": "function"}}, "file": "l", "shortname": "JSONPRequest", "properties": {"pattern": {"description": "Default RegExp used to insert the generated callback name into the JSONP\nurl.", "member": "JSONPRequest.pattern", "static": "", "guessedname": "pattern", "guessedtype": "property", "type": "RegExp"}}, "description": "<p>Provides a JSONPRequest class for repeated JSONP calls, and a convenience\nmethod Y.ls_n.jsonp(url, callback) to instantiate and send a JSONP request.</p>\n<p>The url of the JSONP service should include the substring \"{callback}\"\nin place of the name of the callback function to be executed.  E.g\n<code>Y.ls_n.jsonp(\"http://foo.com/bar?cb={callback}\",myCallback);</code></p>\n<p>The second parameter can be a callback function that accepts the JSON\npayload as its argument, or a configuration object supporting the keys:</p>\n<ul>\n<li>success - function handler for successful transmission</li>\n<li>failure - function handler for failed transmission</li>\n<li>pattern - RegExp instance used to insert the generated callback name\ninto the JSONP url (default /\\{callback\\}/i)</li>\n</ul>"}}, "version": "3", "modules": {"ls_n.jsonp": {"description": "<p>Provides a JSONPRequest class for repeated JSONP calls, and a convenience\nmethod Y.ls_n.jsonp(url, callback) to instantiate and send a JSONP request.</p>\n<p>The url of the JSONP service should include the substring \"{callback}\"\nin place of the name of the callback function to be executed.  E.g\n<code>Y.ls_n.jsonp(\"http://foo.com/bar?cb={callback}\",myCallback);</code></p>\n<p>The second parameter can be a callback function that accepts the JSON\npayload as its argument, or a configuration object supporting the keys:</p>\n<ul>\n<li>success - function handler for successful transmission</li>\n<li>failure - function handler for failed transmission</li>\n<li>pattern - RegExp instance used to insert the generated callback name\ninto the JSONP url (default /\\{callback\\}/i)</li>\n</ul>", "submodules": [], "classlist": ["JSONPRequest"], "filelist": ["jsonp.js"], "subdata": {}, "name": "ls_n.jsonp"}}, "filemap": {"jsonp.js": {"name": "jsonp.js", "classlist": [], "module": "ls_n.jsonp", "guessedname": "l", "guessedtype": "property", "property": "l"}}}