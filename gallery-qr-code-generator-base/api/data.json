{
    "project": {
        "name": "QR Code Generator Base",
        "description": ""
    },
    "files": {
        "js/qr-code-generator-base.js": {
            "name": "js/qr-code-generator-base.js",
            "modules": {
                "gallery-qr-code-generator-base": 1
            },
            "classes": {
                "QrCode": 1,
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1
            },
            "fors": {
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1,
                "QrCode": 1
            },
            "namespaces": {
                "QrCode": 1
            }
        }
    },
    "modules": {
        "gallery-qr-code-generator-base": {
            "name": "gallery-qr-code-generator-base",
            "submodules": {},
            "classes": {
                "QrCode": 1,
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1
            },
            "fors": {
                "QrCode.Data": 1,
                "QrCode.GeneratorBase": 1,
                "QrCode.AlphanumericData": 1,
                "QrCode.ByteData": 1,
                "QrCode.NumericData": 1,
                "QrCode.Ucs2Data": 1,
                "QrCode.Utf8Data": 1,
                "QrCode": 1
            },
            "namespaces": {
                "QrCode": 1
            },
            "tag": "module",
            "file": "js/qr-code-generator-base.js",
            "line": 1,
            "description": "gallery-qr-code-generator-base is a slightly low-level utility for generating QR Codes."
        }
    },
    "classes": {
        "QrCode": {
            "name": "QrCode",
            "shortname": "QrCode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "",
            "file": "js/qr-code-generator-base.js",
            "line": 6,
            "static": 1
        },
        "QrCode.Data": {
            "name": "QrCode.Data",
            "shortname": "QrCode.Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 2989,
            "description": "This class shouldn't be used directly.\nIt is intended as an interface to implement a specific data encoding mode.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.GeneratorBase": {
            "name": "QrCode.GeneratorBase",
            "shortname": "QrCode.GeneratorBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 3041,
            "description": "This class provides utility methods for generating QR Codes.",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.AlphanumericData": {
            "name": "QrCode.AlphanumericData",
            "shortname": "QrCode.AlphanumericData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4395,
            "description": "This class encodes a value in alphanumeric mode.  Alphanumeric mode\nencodes strings containing only numeric characters, capital-letter\ncharacters, space, dollar sign, percent sign, asterisk, plus sign,\nhyphen-minus, full stop, solidus, and colon.\n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.ByteData": {
            "name": "QrCode.ByteData",
            "shortname": "QrCode.ByteData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4514,
            "description": "This class encodes a value in byte mode.  Byte mode encodes strings\nas raw binary data.",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.NumericData": {
            "name": "QrCode.NumericData",
            "shortname": "QrCode.NumericData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4600,
            "description": "This class encodes a value in numeric mode.  Numeric mode encodes\nstrings containing only numeric characters.\n0123456789",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.Ucs2Data": {
            "name": "QrCode.Ucs2Data",
            "shortname": "QrCode.Ucs2Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4680,
            "description": "This class sets the extended channel interpretation mode indicator\nfor the ucs2 character set.  While this is a Data object, it does not\ndirectly encode data.  Instead, it sets a flag in the data stream\nwhich tells a decoder how to interpret the data that follows.  Ucs2\nis an interesting character set because JavaScript strings are\nhandled in ucs2.  Combined with the ByteData object and a character\nwidth set to 16, any JavaScript string can be precisely encoded.\nUnfortunately it appears that many decoders lack support for the ucs2\ncharacter set.  Android's standard Barcode Scanner application does\nprovide support, but the font used to display the result is not able\nto render the entire range of unicode characters.",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "QrCode.Utf8Data": {
            "name": "QrCode.Utf8Data",
            "shortname": "QrCode.Utf8Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode",
            "file": "js/qr-code-generator-base.js",
            "line": 4735,
            "description": "This class sets the extended channel interpretation mode indicator\nfor the utf8 character set.  While this is a Data object, it does not\ndirectly encode data.  Instead, it sets a flag in the data stream\nwhich tells a decoder how to interpret the data that follows.  Utf8\nis a widely supported character set, so this may be a good choice if\nyou need to encode characters that are not supported in alphanumeric\nmode.  Note that JavaScript strings do not use utf8 characters.  This\nmodule does not provide the functionality required to convert\ncharacters to utf8.",
            "is_constructor": 1,
            "extends": "QrCode.Data",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "js/qr-code-generator-base.js",
            "line": 2999,
            "description": "This is an abstract method that should be implemented to return a\nproperly formatted binary string for a specific data encoding mode.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3009,
            "description": "When extending this class, the value of type should be specifically defined.\nMake sure the type is also set on the Y.QrCode.Data.Type object.",
            "itemtype": "attribute",
            "name": "type",
            "initonly": "",
            "type": "String",
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3022,
            "description": "The value to encode.",
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3032,
            "description": "This object lists all supported data encoding modes.",
            "itemtype": "property",
            "name": "Type",
            "static": 1,
            "type": "[String]",
            "class": "QrCode.Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3050,
            "description": "Performs a mask operation that inverts some data bits.  QR Codes apply\none of eight possible masks to the raw data matrix.  Decoders benefit\nwhen a mask is used to reduce the occurence of ambiguous patterns\nwithin the data matrix.",
            "itemtype": "method",
            "name": "applyMask",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write the results to.  Existing data will be overwritten.",
                    "type": "[Boolean]"
                },
                {
                    "name": "dataMatrix",
                    "description": "An array with the source data.  Non-data elements should be undefined.",
                    "type": "[Boolean]"
                },
                {
                    "name": "maskFunction",
                    "description": "A function that accepts x and y coordinates and returns true or false.\nThe x and y coordinates passed to the mask function do not account for the quiet zone region.\nWhen the mask function returns true, the data at that position is inverted.",
                    "type": "Function"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.  (dataMatrix and matrix should be the same size.)",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the mask has been applied.\nIt is guaranteed to be called in a future turn of the event loop.  The modified matrix will be\npassed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3112,
            "description": "Alignment patterns are distinct patterns used to help decoders overcome\ndistortion and perspective when viewing a QR Code.  They are made up of\na 5x5 square of dark values surrounding a 3x3 square of light values\nsurrounding a single dark value.",
            "itemtype": "method",
            "name": "drawAlignmentPattern",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "centerX",
                    "description": "The x coordinate of the center of the alignment pattern.",
                    "type": "Number"
                },
                {
                    "name": "centerY",
                    "description": "The y coordinate of the center of the alignment pattern.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the alignment pattern will replace\nany existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3148,
            "description": "Finder patterns are distinct patterns placed in three corners of a QR code.\nFinder patterns help decoders determine position, scale, and orientation.\nThey are made up of a 9x9 square of light values surrounding a 7x7 square\nof dark values surrounding a 5x5 square of light values surrounding a 3x3\nsquare filled with dark values.",
            "itemtype": "method",
            "name": "drawFinderPattern",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "centerX",
                    "description": "The x coordinate of the center of the finder pattern.",
                    "type": "Number"
                },
                {
                    "name": "centerY",
                    "description": "The y coordinate of the center of the finder pattern.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the finder pattern will replace\nany existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3185,
            "description": "The error correction level and the id of the mask that has been applied to the\ndata matrix are encoded together as a 5 bit value.  This value gets 10 error\ncorrection bits appended to it, created by a (15, 5) BCH code.  The final 15 bit\nformat information codeword has specific locations reserved for it within the\nmatrix.  QR Codes contain the format information twice for additional redundancy.",
            "itemtype": "method",
            "name": "drawFormatInformation",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "binaryString",
                    "description": "A string conatining 15 '1' or '0' characters.",
                    "type": "String"
                },
                {
                    "name": "micro",
                    "description": "Set this to true for a Micro QR Code or false for a QR Code.",
                    "type": "Boolean"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the format information will replace\nany existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3271,
            "description": "The quiet zone region is a padding of light values around the outside of a\nQR Code.  It helps separate the QR Code from other visual elements.",
            "itemtype": "method",
            "name": "drawQuietZone",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the quiet zone region will replace\nany existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3319,
            "description": "The timing pattern is a row and column of alternating dark and light values.\nThe timing pattern allows decoders to determine the version of the QR Code as\nwell as the pixel density and coordinate system.",
            "itemtype": "method",
            "name": "drawTimingPattern",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "coordinate",
                    "description": "The row and column index to write to.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the timing pattern will replace\nany existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3352,
            "description": "QR Codes version 7 and higher contain the version number as a 6 bit\nvalue.  This value gets 12 error correction bits appended to it, created\nby an (18, 6) Golay code.  The final 18 bit version information codeword\nhas specific locations reserved for it within the matrix.  QR Codes\ncontain the version information twice for additional redundancy.",
            "itemtype": "method",
            "name": "drawVersionInformation",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to write to.",
                    "type": "[Boolean]"
                },
                {
                    "name": "binaryString",
                    "description": "A string conatining 18 '1' or '0' characters.",
                    "type": "String"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "overwrite",
                    "description": "When set to true, the version information will replace\nany existing data in the matrix at that location.",
                    "type": "Boolean"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3403,
            "description": "Several potential matrices are generated during the masking process.\nThis method searches a matrix for negative features and generates a\npenalty score.  This score is used to determine which matrix to keep.",
            "itemtype": "method",
            "name": "evaluateMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to examine.",
                    "type": "[Boolean]"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the matrix has been\nevaluated.  It is guaranteed to be called in a future turn of the event loop.  The score\nwill be passed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3553,
            "description": "Several potential matrices are generated during the masking process.\nThis method searches for dark values along the non timing pattern edges.\nDark values along these edges make it easier for decoders to determine\nthe difference between data and the quiet zone region.  The matrix is\ngiven a score used to determine which matrix to keep.",
            "itemtype": "method",
            "name": "evaluateMicroMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The array to examine.",
                    "type": "[Boolean]"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the matrix has been\nevaluated.  It is guaranteed to be called in a future turn of the event loop.  The score\nwill be passed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3595,
            "description": "This method formats the given data into the final binary string used\nto create a data matrix.",
            "itemtype": "method",
            "name": "formatBinaryString",
            "chainable": 1,
            "params": [
                {
                    "name": "binaryString",
                    "description": "A string of '1' and '0' characters.",
                    "type": "String"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the binary\nstring has been formated.  It is guaranteed to be called in a future turn of the\nevent loop.  If an error occurs, the error message will be passed as the first\nargument.  The formatted binary string is passed as the second argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3789,
            "description": "Generate a QR Code matrix.",
            "itemtype": "method",
            "name": "generate",
            "chainable": 1,
            "params": [
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the matrix \nhas been generated.  It is guaranteed to be called in a future turn of the\nevent loop.  If an error occurs, the error message will be passed as the first\nargument.  The matrix is passed as the second argument.  The square root of the\nlength of the matrix is passed as the third argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3846,
            "description": "This method creates a new matrix containing only raw data bits.",
            "itemtype": "method",
            "name": "generateDataMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "An array without any data bits defined.  This matrix is\nonly used to position data bits around other features that are already present.\nThis matrix is not modified.",
                    "type": "[Boolean]"
                },
                {
                    "name": "binaryString",
                    "description": "A string of '1' and '0' characters.",
                    "type": "String"
                },
                {
                    "name": "coordinate",
                    "description": "The coordinate of the vertical timing pattern.",
                    "type": "Number"
                },
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The square root of the length of matrix.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the dataMatrix \nhas been generated.  It is guaranteed to be called in a future turn of the\nevent loop.  The dataMatrix is passed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 3932,
            "description": "Generates a block of error correction codewords based on a block of data codewords.",
            "itemtype": "method",
            "name": "generateErrorCorrectionBlock",
            "chainable": 1,
            "params": [
                {
                    "name": "dataBlock",
                    "description": "Array of strings of '1' and '0' characters, 8 characters long each.",
                    "type": "[String]"
                },
                {
                    "name": "errorCorrectionBlockLength",
                    "description": "The number of 8 bit codewords to generate \nin the error correction block.",
                    "type": "Number"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the error correction block \nhas been generated.  It is guaranteed to be called in a future turn of the event loop.\nThe error correction block is passed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4009,
            "description": "Generates a matrix which represents the given data.",
            "itemtype": "method",
            "name": "generateMatrix",
            "chainable": 1,
            "params": [
                {
                    "name": "binaryString",
                    "description": "A string of '1' and '0' characters.",
                    "type": "String"
                },
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the matrix\nhas been generated.  It is guaranteed to be called in a future turn of the event\nloop.  The matrix is passed as the first argument.  The square root of the length\nof the matrix is passed as the second argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4230,
            "description": "Each QR Code version has specific requirements for the position\nof alignment patterns.  This method returns the center position\nof each required alignment pattern.",
            "itemtype": "method",
            "name": "getAlignmentPatternCoordinates",
            "params": [
                {
                    "name": "quietZoneSize",
                    "description": "The size of the quiet zone region.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "[[x, y]]"
            },
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4264,
            "description": "Converts the value of the data attribute\nto a string of '1' and '0' characters.",
            "itemtype": "method",
            "name": "getBinaryString",
            "chainable": 1,
            "params": [
                {
                    "name": "callbackFunction",
                    "description": "This function will be called once the binary string\nhas been created.  It is guaranteed to be called in a future turn of the event loop.\nThe binary string is passed as the only argument.",
                    "type": "Function"
                }
            ],
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4291,
            "description": "Returns the proper size of a matrix for this version.",
            "itemtype": "method",
            "name": "getSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4307,
            "description": "Input data must be wrapped up in data objects.  A single data object or\nan array is acceptable.  Data objects are responsible for encoding raw\nvalues into one of the data encoding modes supported by QR codes.",
            "itemtype": "attribute",
            "name": "data",
            "default": "[]",
            "initonly": "",
            "type": "Array",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4329,
            "description": "QR Codes use error correction when encoding data.  Error correction\nallows a code to be successfully scanned even if part of the code is\ndamaged, missing, or scanned incorrectly.  There are four different\nerror correction modes.\nMode H can recover from 30% data loss.\nMode L can recover from 7% data loss.\nMode M can recover from 15% data loss.\nMode Q can recover from 25% data loss.\nThe more error correction added, the less data the QR Code can hold.",
            "itemtype": "attribute",
            "name": "errorCorrection",
            "default": "'M',",
            "initonly": "",
            "type": "String",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4355,
            "description": "QR Codes apply one of eight possible masks to the raw data matrix.\nDecoders benefit when a mask is used to reduce the occurence of\nambiguous patterns within the data matrix.  When this attribute is\nset to null, the data matrix will be have all 8 masks applied to it.\nEach one will be evaluated and the one with the fewest ambiguous\npatterns will be used.  When this attribute is set to a value from 0\nto 7, only that specific mask will be applied and used.  This\nimproves the performace of the encoding process by cutting out a\ncomplex step but manually selecting a mask is not recommended because\nit can negatively affect decoder performance and/or accuracy.  Using\ndifferent masks on the same data can result in QR Codes that appear\nvery different, so some choose to select a mask for aesthetic reasons.",
            "itemtype": "attribute",
            "name": "mask",
            "default": "null",
            "initonly": "",
            "type": "Number",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4377,
            "description": "There are 40 different versions of QR Codes. A QR Code's version\nis just a confusing way to specify how big it is.  A version 1 QR\nCode is a 25x25 grid.  That size increases by 4 up to the 181x181\ngrid of a version 40 QR code.  The larger the grid, the more data\nthe QR Code can hold.",
            "itemtype": "attribute",
            "name": "version",
            "default": "'1'",
            "initonly": "",
            "type": "String",
            "class": "QrCode.GeneratorBase",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4408,
            "description": "Returns a properly formatted binary string for alphanumeric data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.AlphanumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4489,
            "itemtype": "attribute",
            "name": "type",
            "default": "'alphanumeric'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.AlphanumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4499,
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "type": "Number|String",
            "class": "QrCode.AlphanumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4524,
            "description": "Returns a properly formatted binary string for byte data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4567,
            "description": "The number of bits used to encode each character.",
            "itemtype": "attribute",
            "name": "characterWidth",
            "default": "8",
            "initonly": "",
            "type": "Number",
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4578,
            "itemtype": "attribute",
            "name": "type",
            "default": "'byte'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4588,
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "type": "Number|String",
            "class": "QrCode.ByteData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4611,
            "description": "Returns a properly formatted binary string for numeric data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.NumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4655,
            "itemtype": "attribute",
            "name": "type",
            "default": "'numeric'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.NumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4665,
            "itemtype": "attribute",
            "name": "value",
            "initonly": "",
            "type": "Number|String",
            "class": "QrCode.NumericData",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4699,
            "description": "Returns a properly formatted binary string for ucs2 data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.Ucs2Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4711,
            "itemtype": "attribute",
            "name": "type",
            "default": "'ucs2'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.Ucs2Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4721,
            "description": "This object does not require a value.",
            "itemtype": "attribute",
            "name": "value",
            "default": "''",
            "readonly": "",
            "type": "Number|String",
            "class": "QrCode.Ucs2Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4752,
            "description": "Returns a properly formatted binary string for utf8 data.",
            "itemtype": "method",
            "name": "toBinaryString",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "QrCode.Utf8Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4764,
            "itemtype": "attribute",
            "name": "type",
            "default": "'utf8'",
            "readonly": "",
            "type": "String",
            "class": "QrCode.Utf8Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4774,
            "description": "This object does not require a value.",
            "itemtype": "attribute",
            "name": "value",
            "default": "''",
            "readonly": "",
            "type": "Number|String",
            "class": "QrCode.Utf8Data",
            "module": "gallery-qr-code-generator-base",
            "namespace": "QrCode"
        },
        {
            "file": "js/qr-code-generator-base.js",
            "line": 4788,
            "description": "Converts a decimal non-negative integer to a string containing '1' and '0' characters.\nIf the number does not fit within the given length, null is returned.  If the number is\nsmaller than the given length, it is padded with '0' and a string with the given length\nis returned.",
            "itemtype": "method",
            "name": "numberToBinaryString",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "static": 1,
            "class": "QrCode",
            "module": "gallery-qr-code-generator-base"
        }
    ]
}